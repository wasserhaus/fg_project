}
pfactors(10)
pfactors <- function(n){
for(i in 1:n){
if(n^(i-1)%%i ==n){
print(i)
}
}
}
pfactors(10)
pfactors <- function(n){
for(i in 1:n){
if(n%%i ==0){
print(i)
}
}
}
pfactors(10)
pfactors <- function(n){
x<- n
for(i in 2:n){
while(n%%i == 0){
x <- x/i
}
}
print(x)
}
pfactors(10)
pfactors <- function(n){
for(i in 2:n){
if(n%%i ==0) return(FALSE)
}
return(TRUE)
}
pfactors(10)
fact <- function(n){
res <- c()
for(i in 2:n){
if(pfactors(i)== TRUE){
if(n%%i == 0){
res <- append(res, i)
}
}
}
return(res)
}
fact(10)
fact <- function(n){
res <- c()
for(i in 2:n){
if(pfactors(i)){
if(n%%i == 0){
res <- append(res, i)
}
}
}
return(res)
}
fact(10)
fact <- function(n){
res <- list()
for(i in 2:n){
if(pfactors(i)){
if(n%%i == 0){
res <- append(res, i)
}
}
}
return(res)
}
fact(10)
fact <- function(n){
res <- c()
for(i in 2:n){
if(pfactors(i)){
if(n%%i == 0){
res <- append(res, i)
}
}
}
return(res)
}
fact <- function(n){
res <- c()
for(i in 2:n){
if(pfactors(i)){
if(n%%i == 0){
print(i)
}
}
}
return(res)
}
fact(10)
pfactors(2)
pfactors <- function(n){
if(n==2) return(TRUE)
for(i in 2:n){
if(n%%i ==0) return(FALSE)
}
return(TRUE)
}
pfactors(2)
pfactors(3)
pfactors <- function(n){
if(n==2) return(TRUE)
for(i in 2:n){
if(n%%i ==1) return(FALSE)
}
return(TRUE)
}
pfactors(3)
pfactors <- function(n){
if(n==2) return(TRUE)
for(i in 2:n){
if(n%%i ==0) return(FALSE)
}
return(TRUE)
}
pfactors(4)
pfactors(5)
pfactors(10)
pfactors <- function(n){
if(n==2) return(TRUE)
for(i in 2:n){
if(n%%i ==0){ return(FALSE)}
}
return(TRUE)
}
pfactors(3)
pfactors(4)
pfactors(3)
pfactors(4)
pfactors(10)
pfactors(3)
pfactors <- function(n){
if(n==2) return(TRUE)
for(i in 2:n){
if(n%%i ==0){ return(TRUE)}
}
}
pfactors(10)
pfactors(3)
pfactors(4)
pfactors(5)
pfactors <- function(n){
if(n==2) return(TRUE)
for(i in 2:n){
if(n%%i ==0){ return(FALSE)}
}
}
pfactors(10)
pfactors(3)
pfactors <- function(n){
for(i in 2:n){
if(n%%i ==0){ return(FALSE)}
}
}
pfactors(10)
pfactors(3)
pfactors <- function(n){
for(i in 2:n){
if(i%%n ==0){ return(FALSE)}
}
}
pfactors(10)
pfactors(3)
pfactors <- function(n){
for(i in 2:n){
if(n%%i =0){ return(FALSE)}
}
}
pfactors(10)
pfactors <- function(n){
for(i in 2:n){
if(n%%i =0){ return(FALSE)}
}
}
pfactors <- function(n){
for(i in 2:n){
if(n%%i == 0){ return(FALSE)}
}
}
pfactors(10)
pfactors <- function(n){
for(i in 2:n){
if(n%%i == 0){ return(FALSE)}
}
return(TRUE)
}
pfactors(3)
pfactors <- function(n){
for(i in 2:n){
if(n%%i == 0) return(FALSE)
else return(TRUE)
}
}
pfactors(10)
pfactors(3)
pfactors(4)
pfactors(5)
pfactors <- function(n){
if(n==2) return(TRUE)
for(i in 2:n){
if(n%%i == 0) return(FALSE)
else return(TRUE)
}
}
pfactors(3)
fact <- function(n){
res <- c()
for(i in 2:n){
if(pfactors(i)){
if(n%%i == 0){
print(i)
}
}
}
return(res)
}
fact(10)
fact <- function(n){
res <- c()
for(i in 2:n){
if(pfactors(i)){
if(n%%i == 0){
res <- append(res, i)
}
}
}
return(res)
}
fact(10)
fact(100)
fact(101)
fact(99)
fact(21)
fact(22)
fact(222)
fact(111)
pfactors(111)
pfactors <- function(n){
if(n==2) return(TRUE)
for(i in 2:n){
if(n%%i == 0) return(FALSE)
}
return(TRUE)
}
pfactors(111)
pfactors(5)
pfactors <- function(n){
if(n==2) return(TRUE)
for(i in 2:n){
if(n%%i == 0) return(FALSE)
}
return(TRUE)
}
pfactors(4)
pfactors(5)
square <- function(n) return(n^2)
square(3)
substring("Hallo",2)
substring("Hallo",1,2)
strsplit(1422, split="")
strsplit("1422", split="")
as.numeric(s)
as.numeric(strsplit("1422", split=""))
as.numeric(strsplit("1422", split="")[1])
as.numeric(strsplit("1422", split="")[[1]])
as.numeric(strsplit(1422, split="")[[1]])
as.character(1422)
rev(as.numeric(strsplit(1422, split="")[[1]]))
rev(as.numeric(strsplit(as.character(1422), split="")[[1]]))
lapply(rev(as.numeric(strsplit(as.character(1422), split="")[[1]])), sum)
seq(2,length(rev(as.numeric(strsplit(as.character(1422), split="")[[1]]))), by=2)
for(i in seq(2,length(rev(as.numeric(strsplit(as.character(1422), split="")[[1]]))), by=2)){
ss[i] <- ss[i]*ss[i]
}
ss <- rev(as.numeric(strsplit(as.character(1422), split="")[[1]]))
for(i in seq(2,length(rev(as.numeric(strsplit(as.character(1422), split="")[[1]]))), by=2)){
ss[i] <- ss[i]*ss[i]
}
ss <- rev(as.numeric(strsplit(as.character(1422), split="")[[1]]))
for(i in seq(2,length(rev(as.numeric(strsplit(as.character(1422), split="")[[1]]))), by=2)){
ss[i] <- 2*ss[i]
}
ss <- rev(as.numeric(strsplit(as.character(1422), split="")[[1]]))
for(i in seq(2,length(rev(as.numeric(strsplit(as.character(1422), split="")[[1]]))), by=2)){
ss[i] <- 2*ss[i]
}
floor(log10(12)) + 1
}
test function(n){
con <- as.numeric(strsplit(as.character(line), split="")[[1]])
revcon <- rev(con)
res <- 0
for(i in seq(2, length(revcon),by = 2)){
revcon[i] <- 2*revcon[i]
}
for(i in 1:length(revcon)){
if(floor(log10(revcon[i])) >1){
save <- revcon[i]
revcon[i]<-0
revcon <- append(revcon, sum(as.numeric(strsplit(as.character(save), split="")[[1]]) ))
}
res <- sum(revcon)
}
}
test function(n){
con <- as.numeric(strsplit(as.character(line), split="")[[1]])
revcon <- rev(con)
res <- 0
for(i in seq(2, length(revcon),by = 2)){
revcon[i] <- 2*revcon[i]
}
for(i in 1:length(revcon)){
if(floor(log10(revcon[i])) >1){
save <- revcon[i]
revcon[i]<-0
revcon <- append(revcon, sum(as.numeric(strsplit(as.character(save), split="")[[1]]) ))
}
res <- sum(revcon)
}
}
test function(n=6789){
con <- as.numeric(strsplit(as.character(line), split="")[[1]])
revcon <- rev(con)
res <- 0
for(i in seq(2, length(revcon),by = 2)){
revcon[i] <- 2*revcon[i]
}
for(i in 1:length(revcon)){
if(floor(log10(revcon[i])) >1){
save <- revcon[i]
revcon[i]<-0
revcon <- append(revcon, sum(as.numeric(strsplit(as.character(save), split="")[[1]]) ))
}
res <- sum(revcon)
}
}
sum(ss)
test function(n=6789){
con <- as.numeric(strsplit(as.character(line), split="")[[1]])
revcon <- rev(con)
res <- 0
for(i in seq(2, length(revcon),by = 2)){
revcon[i] <- 2*revcon[i]
}
print(revcon)
for(i in 1:length(revcon)){
if(floor(log10(revcon[i])) >1){
save <- revcon[i]
revcon[i]<-0
revcon <- append(revcon, sum(as.numeric(strsplit(as.character(save), split="")[[1]]) ))
}
res <- sum(revcon)
}
}
test function(n=6789){
con <- as.numeric(strsplit(as.character(n), split="")[[1]])
revcon <- rev(con)
res <- 0
for(i in seq(2, length(revcon),by = 2)){
revcon[i] <- 2*revcon[i]
}
print(revcon)
for(i in 1:length(revcon)){
if(floor(log10(revcon[i])) >1){
save <- revcon[i]
revcon[i]<-0
revcon <- append(revcon, sum(as.numeric(strsplit(as.character(save), split="")[[1]]) ))
}
res <- sum(revcon)
}
}
con <- as.numeric(strsplit(as.character(n), split="")[[1]])
revcon <- rev(con)
res <- 0
for(i in seq(2, length(revcon),by = 2)){
revcon[i] <- 2*revcon[i]
}
print(revcon)
for(i in 1:length(revcon)){
if(floor(log10(revcon[i])) >1){
save <- revcon[i]
revcon[i]<-0
revcon <- append(revcon, sum(as.numeric(strsplit(as.character(save), split="")[[1]]) ))
}
res <- sum(revcon)
test function(n=6789){
con <- as.numeric(strsplit(as.character(n), split="")[[1]])
revcon <- rev(con)
res <- 0
for(i in seq(2, length(revcon),by = 2)){
revcon[i] <- 2*revcon[i]
}
print(revcon)
for(i in 1:length(revcon)){
if(floor(log10(revcon[i])) >1){
save <- revcon[i]
revcon[i]<-0
revcon <- append(revcon, sum(as.numeric(strsplit(as.character(save), split="")[[1]]) ))
}
res <- sum(revcon)
}
}
revcon <- rev(con)
con <- as.numeric(strsplit(as.character(n), split="")[[1]])
test function(n=6789){
con <- as.numeric(strsplit(as.character(n), split="")[[1]])
revcon <- rev(con)
res <- 0
for(i in seq(2, length(revcon),by = 2)){
revcon[i] <- 2*revcon[i]
}
print(revcon)
for(i in 1:length(revcon)){
if(floor(log10(revcon[i])) >1){
save <- revcon[i]
revcon[i]<-0
revcon <- append(revcon, sum(as.numeric(strsplit(as.character(save), split="")[[1]]) ))
}
res <- sum(revcon)
}
}
con <- as.numeric(strsplit(as.character(6789), split="")[[1]])
revcon <- rev(con)
con <- as.numeric(strsplit(as.character(6789), split="")[[1]])
revcon <- rev(con)
res <- 0
for(i in seq(2, length(revcon),by = 2)){
revcon[i] <- 2*revcon[i]
}
print(revcon)
for(i in 1:length(revcon)){
if(floor(log10(revcon[i])) >1){
save <- revcon[i]
revcon[i]<-0
revcon <- append(revcon, sum(as.numeric(strsplit(as.character(save), split="")[[1]]) ))
}
res <- sum(revcon)
}
for(i in 1:length(revcon)){
if(floor(log10(revcon[i])) >1){
save <- revcon[i]
print(save)
revcon[i]<-0
revcon <- append(revcon, sum(as.numeric(strsplit(as.character(save), split="")[[1]]) ))
}
res <- sum(revcon)
}
test function(n=6789){
con <- as.numeric(strsplit(as.character(6789), split="")[[1]])
revcon <- rev(con)
res <- 0
for(i in seq(2, length(revcon),by = 2)){
revcon[i] <- 2*revcon[i]
}
print(revcon)
for(i in 1:length(revcon)){
if(floor(log10(revcon[i])) >1){
save <- revcon[i]
print(save)
revcon[i]<-0
revcon <- append(revcon, sum(as.numeric(strsplit(as.character(save), split="")[[1]]) ))
}
res <- sum(revcon)
}
}
for(i in 1:length(revcon)){
if(floor(log10(revcon[i])) >1){
save <- revcon[i]
print(save)
revcon[i]<-0
revcon <- append(revcon, sum(as.numeric(strsplit(as.character(save), split="")[[1]]) ))
}
res <- sum(revcon)
}
for(i in 1:length(revcon)){
if(floor(log10(revcon[i])) >1){
save <- revcon[i]
print(save)
revcon[i]<-0
revcon <- append(revcon, sum(as.numeric(strsplit(as.character(save), split="")[[1]])))
}
res <- sum(revcon)
}
install.packages("remotes")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>",
fig.path = "man/figures/README-",
out.width = "100%",
warning = FALSE,
message = FALSE,
fig.retina = 2,
fig.align = 'center'
)
library(project1)
head(download_data(), n=10)
library(project1)
num_summary()
library(project1)
visualize_data()
library(project1)
test_data(visuals = TRUE)
library(project1)
test_data("^GSPC",visuals = TRUE)
library(project1)
test_data("^GDAXI",visuals = TRUE)
library(project1)
test_data("GC=F",visuals = TRUE)
