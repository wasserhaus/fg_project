df_plot_full_log$Value <- log(df_plot_full_log$Value)
df_plot_full_log$Value[which(!is.finite(df_plot_full_log$Value))] <-0
p3 <- ggplot()+
geom_line(data = df_plot_full, aes(x= as.Date.character(Date), y= as.numeric(Value)),color='blue', size = 0.5)+
#facet_grid(Type~., scales = "free")+
facet_grid(Type~., scales = "free")+
theme_bw()
print(p3)
# ggplot()+
#   geom_line(data = df_plot_full_log, aes(x= as.Date(Date), y= Value), color = 'blue', size = 0.5)+
#   facet_grid(Type~., scales = "free")+
#   #geom_vline(xintercept=as.Date("2020-10-10"))+
#   geom_vline(xintercept =as.Date(subset(df_plot_full_log, Value <1.5 )$Date),color = 'red')+
#   theme_bw()
}
visualize_data()
visualize_data <- function(x ="GC=F", wish_date =  Sys.Date()){
df_fg <- download_data(x, wish_date)
print(as.data.frame(df_fg))
fg_overview <- table(df_fg$Sentiment, df_fg$Close)
print(fg_overview)
fg_freq <- data.frame(table(df_fg$Sentiment))
p1 <- ggplot(fg_freq, aes(x=Var1, y=Freq)) +
geom_bar(stat = "identity")+
xlab("Sentiment") +
ylab("Count") +
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
geom_text(aes(label=Freq), vjust=-0.3, size=3.5)+
theme_bw()
print(p1)
p2 <- ggplot(data = data.frame(fg_overview), aes(x=Var1,y=Freq, fill=Var2))+
geom_bar(stat="identity",color = "black",position=position_dodge())+
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
ylab("Frequency in Days") +
geom_text(aes(label=Freq), vjust=-0.3, size=3.5, position = position_dodge(0.9))+
guides(fill=guide_legend(title="Outcome Day"))+
theme_bw()
print(p2)
ticker_prices <-tq_get(x,get = "stock.prices",from = "2011-01-03",to = wish_date) %>%
select(date, open, close) %>%
na.omit() %>%
as.data.frame()
print(ticker_prices)
df_plot1 <- data.frame(Date = df_fg$Date, Value = df_fg$Fear.Greed, Type = "Fear and Greed" )
print(nrow(df_plot1))
print(which(is.na(df_plot1)))
df_plot2 <- data.frame(Date = ticker_prices$date, Value = ticker_prices$close, Type = "Price")
print(nrow(df_plot2))
print(which(is.na(df_plot2)))
df_plot_full <- rbind(df_plot1,df_plot2)
print(nrow(df_plot_full))
print(which(is.na(df_plot_full)))
df_plot_full_log <-df_plot_full
df_plot_full_log$Value <- log(df_plot_full_log$Value)
df_plot_full_log$Value[which(!is.finite(df_plot_full_log$Value))] <-0
p3 <- ggplot()+
geom_line(data = df_plot_full, aes(x= as.Date(Date), y= Value),color='blue', size = 0.5)+
#facet_grid(Type~., scales = "free")+
facet_grid(Type~Value, scales = "free")+
theme_bw()
print(p3)
# ggplot()+
#   geom_line(data = df_plot_full_log, aes(x= as.Date(Date), y= Value), color = 'blue', size = 0.5)+
#   facet_grid(Type~., scales = "free")+
#   #geom_vline(xintercept=as.Date("2020-10-10"))+
#   geom_vline(xintercept =as.Date(subset(df_plot_full_log, Value <1.5 )$Date),color = 'red')+
#   theme_bw()
}
visualize_data()
visualize_data <- function(x ="GC=F", wish_date =  Sys.Date()){
df_fg <- download_data(x, wish_date)
print(as.data.frame(df_fg))
fg_overview <- table(df_fg$Sentiment, df_fg$Close)
print(fg_overview)
fg_freq <- data.frame(table(df_fg$Sentiment))
p1 <- ggplot(fg_freq, aes(x=Var1, y=Freq)) +
geom_bar(stat = "identity")+
xlab("Sentiment") +
ylab("Count") +
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
geom_text(aes(label=Freq), vjust=-0.3, size=3.5)+
theme_bw()
print(p1)
p2 <- ggplot(data = data.frame(fg_overview), aes(x=Var1,y=Freq, fill=Var2))+
geom_bar(stat="identity",color = "black",position=position_dodge())+
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
ylab("Frequency in Days") +
geom_text(aes(label=Freq), vjust=-0.3, size=3.5, position = position_dodge(0.9))+
guides(fill=guide_legend(title="Outcome Day"))+
theme_bw()
print(p2)
ticker_prices <-tq_get(x,get = "stock.prices",from = "2011-01-03",to = wish_date) %>%
select(date, open, close) %>%
na.omit() %>%
as.data.frame()
print(ticker_prices)
df_plot1 <- data.frame(Date = df_fg$Date, Value = df_fg$Fear.Greed, Type = "Fear and Greed" )
print(nrow(df_plot1))
print(which(is.na(df_plot1)))
df_plot2 <- data.frame(Date = ticker_prices$date, Value = ticker_prices$close, Type = "Price")
print(nrow(df_plot2))
print(which(is.na(df_plot2)))
df_plot_full <- rbind(df_plot1,df_plot2)
print(nrow(df_plot_full))
print(which(is.na(df_plot_full)))
df_plot_full_log <-df_plot_full
df_plot_full_log$Value <- log(df_plot_full_log$Value)
df_plot_full_log$Value[which(!is.finite(df_plot_full_log$Value))] <-0
p3 <- ggplot()+
geom_line(data = df_plot_full, aes(x= as.Date(Date), y= Value),color='blue', size = 0.5)+
#facet_grid(Type~., scales = "free")+
facet_grid(.~Type, scales = "free")+
theme_bw()
print(p3)
# ggplot()+
#   geom_line(data = df_plot_full_log, aes(x= as.Date(Date), y= Value), color = 'blue', size = 0.5)+
#   facet_grid(Type~., scales = "free")+
#   #geom_vline(xintercept=as.Date("2020-10-10"))+
#   geom_vline(xintercept =as.Date(subset(df_plot_full_log, Value <1.5 )$Date),color = 'red')+
#   theme_bw()
}
visualize_data()
visualize_data <- function(x ="GC=F", wish_date =  Sys.Date()){
df_fg <- download_data(x, wish_date)
print(as.data.frame(df_fg))
fg_overview <- table(df_fg$Sentiment, df_fg$Close)
print(fg_overview)
fg_freq <- data.frame(table(df_fg$Sentiment))
p1 <- ggplot(fg_freq, aes(x=Var1, y=Freq)) +
geom_bar(stat = "identity")+
xlab("Sentiment") +
ylab("Count") +
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
geom_text(aes(label=Freq), vjust=-0.3, size=3.5)+
theme_bw()
print(p1)
p2 <- ggplot(data = data.frame(fg_overview), aes(x=Var1,y=Freq, fill=Var2))+
geom_bar(stat="identity",color = "black",position=position_dodge())+
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
ylab("Frequency in Days") +
geom_text(aes(label=Freq), vjust=-0.3, size=3.5, position = position_dodge(0.9))+
guides(fill=guide_legend(title="Outcome Day"))+
theme_bw()
print(p2)
ticker_prices <-tq_get(x,get = "stock.prices",from = "2011-01-03",to = wish_date) %>%
select(date, open, close) %>%
na.omit() %>%
as.data.frame()
print(ticker_prices)
df_plot1 <- data.frame(Date = df_fg$Date, Value = df_fg$Fear.Greed, Type = "Fear and Greed" )
print(nrow(df_plot1))
print(which(is.na(df_plot1)))
df_plot2 <- data.frame(Date = ticker_prices$date, Value = ticker_prices$close, Type = "Price")
print(nrow(df_plot2))
print(which(is.na(df_plot2)))
df_plot_full <- rbind(df_plot1,df_plot2)
print(nrow(df_plot_full))
print(which(is.na(df_plot_full)))
df_plot_full_log <-df_plot_full
df_plot_full_log$Value <- log(df_plot_full_log$Value)
df_plot_full_log$Value[which(!is.finite(df_plot_full_log$Value))] <-0
p3 <- ggplot()+
geom_line(data = df_plot_full, aes(x= as.Date(Date), y= Value),color='blue', size = 0.5)+
#facet_grid(Type~., scales = "free")+
facet_grid(Type~., scales = "free")+
theme_bw()
print(p3)
# ggplot()+
#   geom_line(data = df_plot_full_log, aes(x= as.Date(Date), y= Value), color = 'blue', size = 0.5)+
#   facet_grid(Type~., scales = "free")+
#   #geom_vline(xintercept=as.Date("2020-10-10"))+
#   geom_vline(xintercept =as.Date(subset(df_plot_full_log, Value <1.5 )$Date),color = 'red')+
#   theme_bw()
}
visualize_data()
visualize_data <- function(x ="GC=F", wish_date =  Sys.Date()){
df_fg <- download_data(x, wish_date)
print(as.data.frame(df_fg))
fg_overview <- table(df_fg$Sentiment, df_fg$Close)
print(fg_overview)
fg_freq <- data.frame(table(df_fg$Sentiment))
p1 <- ggplot(fg_freq, aes(x=Var1, y=Freq)) +
geom_bar(stat = "identity")+
xlab("Sentiment") +
ylab("Count") +
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
geom_text(aes(label=Freq), vjust=-0.3, size=3.5)+
theme_bw()
print(p1)
p2 <- ggplot(data = data.frame(fg_overview), aes(x=Var1,y=Freq, fill=Var2))+
geom_bar(stat="identity",color = "black",position=position_dodge())+
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
ylab("Frequency in Days") +
geom_text(aes(label=Freq), vjust=-0.3, size=3.5, position = position_dodge(0.9))+
guides(fill=guide_legend(title="Outcome Day"))+
theme_bw()
print(p2)
ticker_prices <-tq_get(x,get = "stock.prices",from = "2011-01-03",to = wish_date) %>%
select(date, open, close) %>%
na.omit() %>%
as.data.frame()
print(ticker_prices)
df_plot1 <- data.frame(Date = df_fg$Date, Value = df_fg$Fear.Greed, Type = "Fear and Greed" )
print(nrow(df_plot1))
print(which(is.na(df_plot1)))
df_plot2 <- data.frame(Date = ticker_prices$date, Value = ticker_prices$close, Type = "Price")
print(nrow(df_plot2))
print(which(is.na(df_plot2)))
df_plot_full <- rbind(df_plot1,df_plot2)
print(nrow(df_plot_full))
print(which(is.na(df_plot_full)))
df_plot_full_log <-df_plot_full
df_plot_full_log$Value <- log(df_plot_full_log$Value)
df_plot_full_log$Value[which(!is.finite(df_plot_full_log$Value))] <-0
p3 <- ggplot()+
geom_line(data = df_plot_full, aes(x= as.Date(Date), y= as.integer(Value)),color='blue', size = 0.5)+
#facet_grid(Type~., scales = "free")+
facet_grid(Type~., scales = "free")+
theme_bw()
print(p3)
# ggplot()+
#   geom_line(data = df_plot_full_log, aes(x= as.Date(Date), y= Value), color = 'blue', size = 0.5)+
#   facet_grid(Type~., scales = "free")+
#   #geom_vline(xintercept=as.Date("2020-10-10"))+
#   geom_vline(xintercept =as.Date(subset(df_plot_full_log, Value <1.5 )$Date),color = 'red')+
#   theme_bw()
}
visualize_data()
visualize_data <- function(x ="GC=F", wish_date =  Sys.Date()){
df_fg <- download_data(x, wish_date)
print(as.data.frame(df_fg))
fg_overview <- table(df_fg$Sentiment, df_fg$Close)
print(fg_overview)
fg_freq <- data.frame(table(df_fg$Sentiment))
p1 <- ggplot(fg_freq, aes(x=Var1, y=Freq)) +
geom_bar(stat = "identity")+
xlab("Sentiment") +
ylab("Count") +
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
geom_text(aes(label=Freq), vjust=-0.3, size=3.5)+
theme_bw()
print(p1)
p2 <- ggplot(data = data.frame(fg_overview), aes(x=Var1,y=Freq, fill=Var2))+
geom_bar(stat="identity",color = "black",position=position_dodge())+
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
ylab("Frequency in Days") +
geom_text(aes(label=Freq), vjust=-0.3, size=3.5, position = position_dodge(0.9))+
guides(fill=guide_legend(title="Outcome Day"))+
theme_bw()
print(p2)
ticker_prices <-tq_get(x,get = "stock.prices",from = "2011-01-03",to = wish_date) %>%
select(date, open, close) %>%
na.omit() %>%
as.data.frame()
df_plot1 <- data.frame(Date = df_fg$Date, Value = df_fg$Fear.Greed, Type = "Fear and Greed" )
df_plot2 <- data.frame(Date = ticker_prices$date, Value = ticker_prices$close, Type = "Price")
df_plot_full <- rbind(df_plot1,df_plot2)
print(df_plot_full)
df_plot_full_log <-df_plot_full
df_plot_full_log$Value <- log(df_plot_full_log$Value)
df_plot_full_log$Value[which(!is.finite(df_plot_full_log$Value))] <-0
p3 <- ggplot()+
geom_line(data = df_plot_full, aes(x= as.Date(Date), y= Value),color='blue', size = 0.5)+
#facet_grid(Type~., scales = "free")+
facet_grid(Type~., scales = "free")+
theme_bw()
print(p3)
# ggplot()+
#   geom_line(data = df_plot_full_log, aes(x= as.Date(Date), y= Value), color = 'blue', size = 0.5)+
#   facet_grid(Type~., scales = "free")+
#   #geom_vline(xintercept=as.Date("2020-10-10"))+
#   geom_vline(xintercept =as.Date(subset(df_plot_full_log, Value <1.5 )$Date),color = 'red')+
#   theme_bw()
}
visualize_data()
visualize_data <- function(x ="GC=F", wish_date =  Sys.Date()){
df_fg <- download_data(x, wish_date)
print(as.data.frame(df_fg))
fg_overview <- table(df_fg$Sentiment, df_fg$Close)
print(fg_overview)
fg_freq <- data.frame(table(df_fg$Sentiment))
p1 <- ggplot(fg_freq, aes(x=Var1, y=Freq)) +
geom_bar(stat = "identity")+
xlab("Sentiment") +
ylab("Count") +
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
geom_text(aes(label=Freq), vjust=-0.3, size=3.5)+
theme_bw()
print(p1)
p2 <- ggplot(data = data.frame(fg_overview), aes(x=Var1,y=Freq, fill=Var2))+
geom_bar(stat="identity",color = "black",position=position_dodge())+
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
ylab("Frequency in Days") +
geom_text(aes(label=Freq), vjust=-0.3, size=3.5, position = position_dodge(0.9))+
guides(fill=guide_legend(title="Outcome Day"))+
theme_bw()
print(p2)
ticker_prices <-tq_get(x,get = "stock.prices",from = "2011-01-03",to = wish_date) %>%
select(date, open, close) %>%
na.omit() %>%
as.data.frame()
df_plot1 <- data.frame(Date = df_fg$Date, Value = df_fg$Fear.Greed, Type = "Fear and Greed" )
df_plot2 <- data.frame(Date = ticker_prices$date, Value = ticker_prices$close, Type = "Price")
df_plot_full <- bind_rows(df_plot1,df_plot2)
print(df_plot_full)
df_plot_full_log <-df_plot_full
df_plot_full_log$Value <- log(df_plot_full_log$Value)
df_plot_full_log$Value[which(!is.finite(df_plot_full_log$Value))] <-0
p3 <- ggplot()+
geom_line(data = df_plot_full, aes(x= as.Date(Date), y= Value),color='blue', size = 0.5)+
#facet_grid(Type~., scales = "free")+
facet_grid(Type~., scales = "free")+
theme_bw()
print(p3)
# ggplot()+
#   geom_line(data = df_plot_full_log, aes(x= as.Date(Date), y= Value), color = 'blue', size = 0.5)+
#   facet_grid(Type~., scales = "free")+
#   #geom_vline(xintercept=as.Date("2020-10-10"))+
#   geom_vline(xintercept =as.Date(subset(df_plot_full_log, Value <1.5 )$Date),color = 'red')+
#   theme_bw()
}
visualize_data()
visualize_data <- function(x ="GC=F", wish_date =  Sys.Date()){
df_fg <- download_data(x, wish_date)
print(as.data.frame(df_fg))
fg_overview <- table(df_fg$Sentiment, df_fg$Close)
print(fg_overview)
fg_freq <- data.frame(table(df_fg$Sentiment))
p1 <- ggplot(fg_freq, aes(x=Var1, y=Freq)) +
geom_bar(stat = "identity")+
xlab("Sentiment") +
ylab("Count") +
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
geom_text(aes(label=Freq), vjust=-0.3, size=3.5)+
theme_bw()
print(p1)
p2 <- ggplot(data = data.frame(fg_overview), aes(x=Var1,y=Freq, fill=Var2))+
geom_bar(stat="identity",color = "black",position=position_dodge())+
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
ylab("Frequency in Days") +
geom_text(aes(label=Freq), vjust=-0.3, size=3.5, position = position_dodge(0.9))+
guides(fill=guide_legend(title="Outcome Day"))+
theme_bw()
print(p2)
ticker_prices <-tq_get(x,get = "stock.prices",from = "2011-01-03",to = wish_date) %>%
select(date, open, close) %>%
na.omit() %>%
as.data.frame()
df_plot1 <- data.frame(Date = as.Date(df_fg$Date), Value = df_fg$Fear.Greed, Type = "Fear and Greed" )
df_plot2 <- data.frame(Date = ticker_prices$date, Value = ticker_prices$close, Type = "Price")
df_plot_full <- bind_rows(df_plot1,df_plot2)
print(df_plot_full)
df_plot_full_log <-df_plot_full
df_plot_full_log$Value <- log(df_plot_full_log$Value)
df_plot_full_log$Value[which(!is.finite(df_plot_full_log$Value))] <-0
p3 <- ggplot()+
geom_line(data = df_plot_full, aes(x= as.Date(Date), y= Value),color='blue', size = 0.5)+
#facet_grid(Type~., scales = "free")+
facet_grid(Type~., scales = "free")+
theme_bw()
print(p3)
# ggplot()+
#   geom_line(data = df_plot_full_log, aes(x= as.Date(Date), y= Value), color = 'blue', size = 0.5)+
#   facet_grid(Type~., scales = "free")+
#   #geom_vline(xintercept=as.Date("2020-10-10"))+
#   geom_vline(xintercept =as.Date(subset(df_plot_full_log, Value <1.5 )$Date),color = 'red')+
#   theme_bw()
}
visualize_data()
visualize_data <- function(x ="GC=F", wish_date =  Sys.Date()){
df_fg <- download_data(x, wish_date)
print(as.data.frame(df_fg))
fg_overview <- table(df_fg$Sentiment, df_fg$Close)
print(fg_overview)
fg_freq <- data.frame(table(df_fg$Sentiment))
p1 <- ggplot(fg_freq, aes(x=Var1, y=Freq)) +
geom_bar(stat = "identity")+
xlab("Sentiment") +
ylab("Count") +
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
geom_text(aes(label=Freq), vjust=-0.3, size=3.5)+
theme_bw()
print(p1)
p2 <- ggplot(data = data.frame(fg_overview), aes(x=Var1,y=Freq, fill=Var2))+
geom_bar(stat="identity",color = "black",position=position_dodge())+
scale_x_discrete(limits=c("extreme fear", "fear", "neutral", "greed", "extreme greed"))+
ylab("Frequency in Days") +
geom_text(aes(label=Freq), vjust=-0.3, size=3.5, position = position_dodge(0.9))+
guides(fill=guide_legend(title="Outcome Day"))+
theme_bw()
print(p2)
ticker_prices <-tq_get(x,get = "stock.prices",from = "2011-01-03",to = wish_date) %>%
select(date, open, close) %>%
na.omit() %>%
as.data.frame()
df_plot1 <- data.frame(Date = as.Date(df_fg$Date), Value = df_fg$Fear.Greed, Type = "Fear and Greed" )
df_plot2 <- data.frame(Date = ticker_prices$date, Value = ticker_prices$close, Type = "Price")
df_plot_full <- bind_rows(df_plot1,df_plot2)
print(df_plot_full)
df_plot_full_log <-df_plot_full
df_plot_full_log$Value <- log(df_plot_full_log$Value)
df_plot_full_log$Value[which(!is.finite(df_plot_full_log$Value))] <-0
p3 <- ggplot()+
geom_line(data = df_plot_full, aes(x= as.Date(Date), y= Value),color='blue', size = 0.5)+
facet_grid(Type~., scales = "free")+
theme_bw()
print(p3)
p4 <- ggplot()+
geom_line(data = df_plot_full_log, aes(x= as.Date(Date), y= Value), color = 'blue', size = 0.5)+
facet_grid(Type~., scales = "free")+
#geom_vline(xintercept=as.Date("2020-10-10"))+
geom_vline(xintercept =as.Date(subset(df_plot_full_log, Value <1.5 )$Date),color = 'red')+
theme_bw()
print(p4)
}
visualize_data()
test_data <- function(x ="GC=F", wish_date =  Sys.Date()){
df_fg <- download_data(x, wish_date)
df_fg$Close <- as.character(df_fg$Close)
observed_indep_statistic <- df_fg %>%
specify(Close~Sentiment) %>%
hypothesize(null = "independence") %>%
calculate(stat = "Chisq")
null_dist_sim <- df_fg %>%
specify(Close~Sentiment) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "Chisq")
null_dist_theory <-  df_fg %>%
specify(Close~Sentiment) %>%
assume(distribution = "Chisq")
null_dist_sim %>%
visualize(method = "both")+
shade_p_value(observed_indep_statistic,
direction = "greater")
}
test_data()
test_data <- function(x ="GC=F", wish_date =  Sys.Date()){
df_fg <- download_data(x, wish_date)
df_fg$Close <- as.character(df_fg$Close)
observed_indep_statistic <- df_fg %>%
specify(Close~Sentiment) %>%
hypothesize(null = "independence") %>%
calculate(stat = "Chisq")
print(observed_indep_statistic)
null_dist_sim <- df_fg %>%
specify(Close~Sentiment) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "Chisq")
print(null_dist_sim)
null_dist_theory <-  df_fg %>%
specify(Close~Sentiment) %>%
assume(distribution = "Chisq")
print(null_dist_theory)
null_dist_sim %>%
visualize(method = "both")+
shade_p_value(observed_indep_statistic,
direction = "greater")
}
test_data()
test_data <- function(x ="GC=F", wish_date =  Sys.Date()){
df_fg <- download_data(x, wish_date)
df_fg$Close <- as.character(df_fg$Close)
observed_indep_statistic <- df_fg %>%
specify(Close~Sentiment) %>%
hypothesize(null = "independence") %>%
calculate(stat = "Chisq")
print(observed_indep_statistic)
null_dist_sim <- df_fg %>%
specify(Close~Sentiment) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "Chisq")
print(null_dist_sim)
null_dist_theory <-  df_fg %>%
specify(Close~Sentiment) %>%
assume(distribution = "Chisq")
null_dist_sim %>%
visualize(method = "both")+
shade_p_value(observed_indep_statistic,
direction = "greater")
}
test_data()
test_data <- function(x ="GC=F", wish_date =  Sys.Date()){
df_fg <- download_data(x, wish_date)
df_fg$Close <- as.character(df_fg$Close)
observed_indep_statistic <- df_fg %>%
specify(Close~Sentiment) %>%
hypothesize(null = "independence") %>%
calculate(stat = "Chisq")
print(observed_indep_statistic)
null_dist_sim <- df_fg %>%
specify(Close~Sentiment) %>%
hypothesize(null = "independence") %>%
generate(reps = 1000, type = "permute") %>%
calculate(stat = "Chisq")
null_dist_theory <-  df_fg %>%
specify(Close~Sentiment) %>%
assume(distribution = "Chisq")
null_dist_sim %>%
visualize(method = "both")+
shade_p_value(observed_indep_statistic,
direction = "greater")
print(chisq.test(table(df_fg$Sentiment, df_fg$Close)))
}
test_data()
load_all()
download_data()
library(devtools)
load_all()
download_data()
